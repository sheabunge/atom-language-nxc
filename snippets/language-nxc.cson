'.source.nxc':
  '#ifndef … #define … #endif':
    'prefix': 'def'
    'body': '#ifndef ${1:SYMBOL}\n#define $1 ${2:value}\n#endif'
  '#include':
    'prefix': 'inc'
    'body': '#include "${1:.h}"'
  '#download':
    'prefix': 'down'
    'body': '#download "${1:.h}"'
  'main()':
    'prefix': 'main'
    'body': 'task main() {\n\t${1:/* code */}\n}'
  'For Loop':
    'prefix': 'for'
    'body': 'for (size_t ${1:i} = 0; $1 < ${2:count}; $1${3:++}) {\n\t${4:/* code */}\n}'
  'Do While Loop':
    'prefix': 'do'
    'body': 'do {\n\t${0:/* code */}\n} while(${1:/* condition */});'
  'While Loop':
    'prefix': 'while'
    'body': 'while (${1:/* condition */}) {\n\t${2:/* code */}\n}'
 'Until Loop':
   'prefix': 'until'
   'body': 'until (${1:/* condition */}) {\n\t${2:/* code */}\n}'
  'If Condition':
    'prefix': 'if'
    'body': 'if (${1:/* condition */}) {\n\t${2:/* code */}\n}'
  'If Else':
    'prefix': 'ife'
    'body': 'if (${1:/* condition */}) {\n\t${2:/* code */}\n}\nelse {\n\t${3:/* code */}\n}'
  'Switch Statement':
    'prefix': 'switch'
    'body': 'switch (${1:/* expression */}) {\n\tcase ${2:/* value */}:\n}'
  'case':
    'prefix': 'cs'
    'body': 'case ${1:/* value */}:$0'
  'TextOut':
    'prefix': 'Text'
    'body': 'TextOut($1, $2, "${3:%s}");'
  'NumOut':
    'prefix': 'Num'
    'body': 'NumOut($1, $2, "${3:%s}");'
  'Struct':
    'prefix': 'st'
    'body': 'struct ${1:name_t} {\n\t${2:/* data */}\n};'
  'void':
    'prefix': 'void'
    'body': 'void ${1:name} (${2:/* arguments */}) {\n\t${3:/* code */}\n}'
  'any function':
    'prefix': 'func'
    'body': '${1:void} ${2:name}(${3:/* arguments */}) {\n\t${5:/* code */}\n}'
  'write file':
    'prefix': 'wf'
    'body': 'FILE *${1:fp};\n${1:fp} = fopen ("${2:filename.txt}","w");\nif (${1:fp}!=NULL)\n{\n\tfprintf(${1:fp},"${3:Some String\\n}");\n\tfclose (${1:fp});\n}'
  'read file':
    'prefix': 'rf'
    'body': 'FILE *${1:fp};\n${1:fp} = fopen ("${2:filename.txt}","r");\nif (${1:fp}!=NULL)\n{\n\tfscanf(${1:fp},"${3:Some String\\n}", ${3:&var});\n\tfclose (${1:fp});\n}'
  'Enumeration':
    'prefix': 'enum'
    'body': 'enum ${1:name} { $0 };'
